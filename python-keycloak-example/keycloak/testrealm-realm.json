{
  "id" : "81671fab-3187-442a-bb8b-ef274c91e02a",
  "realm" : "testrealm",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "cc7f0660-c6cd-43fb-8be4-20f8423cae6d",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "81671fab-3187-442a-bb8b-ef274c91e02a",
      "attributes" : { }
    }, {
      "id" : "8d7b4505-d5fd-456e-9897-7550f552aa20",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "81671fab-3187-442a-bb8b-ef274c91e02a",
      "attributes" : { }
    }, {
      "id" : "ecbb6608-2b89-48ba-bc63-ca79ef0a2da8",
      "name" : "default-roles-testrealm",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "81671fab-3187-442a-bb8b-ef274c91e02a",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "44484395-7cf1-4795-b84b-f6d675669c6a",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "66421832-291c-4a59-95f9-06a522735fd7",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-realms", "view-identity-providers", "view-realm", "view-events", "view-authorization", "manage-realm", "view-clients", "query-clients", "manage-identity-providers", "create-client", "manage-users", "manage-clients", "query-users", "view-users", "manage-events", "query-groups", "manage-authorization", "impersonation" ]
          }
        },
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "86b9e79a-6db1-41ee-b59f-fbe2422ec491",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "778d3887-6f90-43a5-a550-e253446149a1",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "e44837e4-e90b-4b59-a4f8-3c3ba45f1821",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "343781aa-1251-4cf9-a134-bef4a85cd18f",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "66c86497-6257-4b87-95a6-cc9f75684adb",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "f510c33c-d1f2-4f54-b5f5-c5e091dd7eb0",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "3a04c36d-acf8-490e-b10a-8fff9c59f6f1",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "c3eb6bf3-5da6-4918-891e-ccc68843aa97",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "91b731bf-880e-41af-a2cc-42e518b3096f",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "92864ca3-28c3-4f80-8926-0ba4e25b83fe",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "6db9a7dc-ae5d-4a17-b6c5-06af0607541c",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "93782929-5b9d-427b-a820-e5256ea459bb",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "5cc43644-759d-4a2d-8ab7-d03b290d7fc6",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "b5ef3eaf-8848-4509-b95d-bba0b68bc1d9",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "318cb6ea-cc16-494f-b3e2-daf45ce65b61",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "26faf742-a3e8-4ea8-8624-8c350b7e956d",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      }, {
        "id" : "c84c7aab-fe19-4ca2-abd4-0b648f543e20",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
        "attributes" : { }
      } ],
      "testclient_with_client_secret" : [ {
        "id" : "97fa899b-040b-4ac6-925d-9c856f02a277",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1015c653-490d-43c5-972d-19e88efe5e0a",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "testclient_with_client_secret_manage_users" : [ {
        "id" : "e7768df0-2065-4e34-9593-b0c7ab5306fe",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b3816ecb-f22a-4b75-a4fd-9339f9176476",
        "attributes" : { }
      } ],
      "admin-cli" : [ ],
      "testclient" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "e11819ca-5628-4196-95ea-70de9f870dee",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3bf708b6-c383-4dae-a7ff-66dcd637c49f",
        "attributes" : { }
      } ],
      "testclient_with_manage_users" : [ {
        "id" : "2f7fedce-bf48-47fc-8cce-773a7f0d797f",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3dde0f02-1c4e-4a22-9277-8a362e53caae",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "3245dd97-4a74-4583-a951-4c788c4828bd",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c457062d-f8f7-4b7f-8ae7-0a537398be07",
        "attributes" : { }
      }, {
        "id" : "e2775bae-65ba-446a-b3dc-bbf6a11a7701",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c457062d-f8f7-4b7f-8ae7-0a537398be07",
        "attributes" : { }
      }, {
        "id" : "c580248a-347f-4da3-b989-d8f857d3fb26",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c457062d-f8f7-4b7f-8ae7-0a537398be07",
        "attributes" : { }
      }, {
        "id" : "065cd854-82e1-41b7-a995-551538f283be",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c457062d-f8f7-4b7f-8ae7-0a537398be07",
        "attributes" : { }
      }, {
        "id" : "6be600e6-e8d1-41b0-b2ff-8bf2cedec82e",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c457062d-f8f7-4b7f-8ae7-0a537398be07",
        "attributes" : { }
      }, {
        "id" : "f414b00c-9f52-47ec-8aec-705cf89ee048",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c457062d-f8f7-4b7f-8ae7-0a537398be07",
        "attributes" : { }
      }, {
        "id" : "87f0ab65-6a82-41a3-8e6c-4b823c542b6e",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c457062d-f8f7-4b7f-8ae7-0a537398be07",
        "attributes" : { }
      }, {
        "id" : "480d10da-52bb-41fd-a78d-0d16f936ea3a",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c457062d-f8f7-4b7f-8ae7-0a537398be07",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "ecbb6608-2b89-48ba-bc63-ca79ef0a2da8",
    "name" : "default-roles-testrealm",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "81671fab-3187-442a-bb8b-ef274c91e02a"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppMicrosoftAuthenticatorName", "totpAppGoogleName" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "c457062d-f8f7-4b7f-8ae7-0a537398be07",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/testrealm/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/testrealm/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "13dd518e-299f-41ae-87d3-27b53f9985f1",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/testrealm/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/testrealm/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "1e663117-2ec5-4cbf-8805-3a6d15f704ca",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "274ec29d-eab4-43eb-b363-d19c34475ea2",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "3bf708b6-c383-4dae-a7ff-66dcd637c49f",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "bfe1a262-33d6-439a-b616-d5f3d8035d89",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "efff2193-e974-4f2a-a051-2c07185c5d92",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/testrealm/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/testrealm/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "c1114aaf-fda1-4231-ad4d-576bcd02c3f0",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "df0c5a76-64eb-4f42-8c10-dcf17b522ed9",
    "clientId" : "testclient",
    "name" : "",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/*" ],
    "webOrigins" : [ "/*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "1015c653-490d-43c5-972d-19e88efe5e0a",
    "clientId" : "testclient_with_client_secret",
    "name" : "",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "GHjfG8XisxzvHGn1kwMlrCt2616IW1Md",
    "redirectUris" : [ "/*" ],
    "webOrigins" : [ "/*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "client.secret.creation.time" : "1719045595",
      "backchannel.logout.session.required" : "true",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "e18fc81c-2b38-4fcb-bac6-598977768a1c",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2bc66436-bce9-4b11-809a-2d4a378992f7",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "092c0a56-1260-49dd-a851-296851dfdd77",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "Default Resource",
        "type" : "urn:testclient_with_client_secret:resources:default",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "_id" : "75b9801f-769e-41d4-ae1d-1c8e1a2f89c3",
        "uris" : [ "/*" ]
      } ],
      "policies" : [ {
        "id" : "bff48e24-ee9d-4dfc-927d-0dcb0a2eb631",
        "name" : "Default Policy",
        "description" : "A policy that grants access only for users within this realm",
        "type" : "js",
        "logic" : "POSITIVE",
        "decisionStrategy" : "AFFIRMATIVE",
        "config" : {
          "code" : "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
        }
      }, {
        "id" : "0b331dcb-dbce-476a-af4d-57c569ce4af5",
        "name" : "Default Permission",
        "description" : "A permission that applies to the default resource type",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "defaultResourceType" : "urn:testclient_with_client_secret:resources:default",
          "applyPolicies" : "[\"Default Policy\"]"
        }
      } ],
      "scopes" : [ ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "b3816ecb-f22a-4b75-a4fd-9339f9176476",
    "clientId" : "testclient_with_client_secret_manage_users",
    "name" : "",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "9UIEmaiJHORXvDQBvZWAY14jmrlBvonY",
    "redirectUris" : [ "/*" ],
    "webOrigins" : [ "/*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "client.secret.creation.time" : "1719058099",
      "backchannel.logout.session.required" : "true",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "7adf455a-3cfb-494d-8bbb-e3381fa4a1e5",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a2bedff6-0fc0-4f86-82fd-ff6408f47ef7",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "48789024-ce98-4d89-8bb0-72beb79504c3",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "Default Resource",
        "type" : "urn:testclient_with_client_secret_manage_users:resources:default",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "_id" : "a17a6da8-d467-42e8-a8a7-14cc21ca13c8",
        "uris" : [ "/*" ]
      } ],
      "policies" : [ {
        "id" : "59d8f554-0eb8-4ff4-8833-ece7c711fe6a",
        "name" : "Default Policy",
        "description" : "A policy that grants access only for users within this realm",
        "type" : "js",
        "logic" : "POSITIVE",
        "decisionStrategy" : "AFFIRMATIVE",
        "config" : {
          "code" : "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
        }
      }, {
        "id" : "cd246734-ae51-4d41-9733-1e9d2107f5c1",
        "name" : "Default Permission",
        "description" : "A permission that applies to the default resource type",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "defaultResourceType" : "urn:testclient_with_client_secret_manage_users:resources:default",
          "applyPolicies" : "[\"Default Policy\"]"
        }
      } ],
      "scopes" : [ ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "3dde0f02-1c4e-4a22-9277-8a362e53caae",
    "clientId" : "testclient_with_manage_users",
    "name" : "",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "N9v75JSHD3DqOg5M76SSCYQl7EJcLnZD",
    "redirectUris" : [ "/*" ],
    "webOrigins" : [ "/*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "client.secret.creation.time" : "1719049078",
      "backchannel.logout.session.required" : "true",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "494ed8e7-9a88-40e8-9c9d-0ce15e87b606",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7bff57f9-ed8e-45dc-8b20-f17f76fd1638",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cbb4f06f-a26b-40ef-9e07-e34382faaed6",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "Default Resource",
        "type" : "urn:testclient_with_manage_users:resources:default",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "_id" : "dd46c8fa-eac2-4c07-9f92-78f0da0efe2a",
        "uris" : [ "/*" ]
      } ],
      "policies" : [ {
        "id" : "57e5e18b-17a7-4f31-beac-b5a3589e73c5",
        "name" : "Default Policy",
        "description" : "A policy that grants access only for users within this realm",
        "type" : "js",
        "logic" : "POSITIVE",
        "decisionStrategy" : "AFFIRMATIVE",
        "config" : {
          "code" : "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
        }
      }, {
        "id" : "316d0465-972e-41da-8b5d-3487fd089bca",
        "name" : "Default Permission",
        "description" : "A permission that applies to the default resource type",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "defaultResourceType" : "urn:testclient_with_manage_users:resources:default",
          "applyPolicies" : "[\"Default Policy\"]"
        }
      } ],
      "scopes" : [ ],
      "decisionStrategy" : "UNANIMOUS"
    }
  } ],
  "clientScopes" : [ {
    "id" : "03cacb11-78e2-4ade-874d-c4c4c3b27c69",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "c4711ccf-268e-4ae6-8b4d-1d435f0f540a",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "e856cb35-c514-4ac3-bf21-8298ad201dd3",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "cba72a6a-99ce-46d6-8d82-ed05f33a9ef7",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "e9189e3e-911b-4ce4-937e-8041d095ce97",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "aef4f82c-d836-4375-8d46-69aea1904ac1",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "9756b91a-580b-437e-a6e1-270396d40ab0",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "e9dd276e-165a-4419-bd80-b8d770b5376c",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "13726456-ff88-4624-aeb7-58ffed43ae2b",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "f975a4b4-4acd-43e9-981d-3275e9924ce3",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "579df234-ca24-4393-85a0-41af96817b33",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "fbfa4c5d-df67-43ff-a337-69ef30419308",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "a8e6d944-783f-4db4-b0e4-ee2ff255f42c",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "72a3d45e-622f-43b4-9071-fe6361c20436",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "d366235d-0625-43b8-b0bc-64623ed00b45",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "0502a2f7-2855-4c55-9ce9-7333826fba66",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "80d1dbb4-e86d-442c-8ee2-812d794faa2a",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "b145b8ab-6c53-4425-a6e7-f25c5830e56a",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "e37936de-6eb1-4071-ade1-69d90e41fa7c",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "6a528fd1-df77-454f-977d-2cbb5558233b",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "16393917-acdd-4d45-831e-ef1a27b2238a",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "bc5d7607-91b2-4eeb-b44a-b105aa2ff8af",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "a085f36f-60e7-4933-ba26-2c4fee2515d0",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "fdffe4d4-a202-4078-8c67-4bbdb92ef434",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "27399ec7-1ccf-4b03-8ba3-2be7fe2bf0b6",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "76b4dec4-d1e1-43c9-8e3e-62dce93067c3",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "e6d2d3ce-0f28-41c3-879d-791012a5e28d",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "c920ac1f-7a57-40af-9515-8c57bd844f2d",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "419b88ad-24f8-4f29-b409-edaf284590ca",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "045345ad-0e50-483a-ac6c-63f103717e3c",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "97f81fbb-74ac-4e9e-b33f-4bad3315c81d",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "21dcfa81-0d33-48c2-ab7e-8b6864f16894",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "d8d8a95a-6dcb-436a-834b-bb4b53cf1a67",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "d55d96ab-2a3b-4b3e-8dac-17911af5d5d1",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "899b156b-a670-42d2-9892-a8074875a7b7",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "cf5500f7-49a0-48ea-86b7-7272083ed133",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "acb5e740-095e-4057-8fb9-b06af3c59848",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String",
        "userinfo.token.claim" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "7cde2777-5cac-42f8-afd6-0ac40fed5f84",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "saml-role-list-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-attribute-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper", "oidc-usermodel-attribute-mapper", "oidc-address-mapper" ]
      }
    }, {
      "id" : "ef483b8f-37bd-4400-8bdf-ffa55b0cbbab",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "13d3ae8e-e3d4-4d4e-9c30-325f587cc29c",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "2635bc9b-0e32-42cf-9d68-465aa9e30c00",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "ac2128b5-c27f-4e5e-984b-d9b1ea176cae",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "caee35fc-f899-4f12-b65b-5ecc3e93d253",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "8127eecc-2d83-42f4-8925-4a6b5ad040dc",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper" ]
      }
    }, {
      "id" : "cbd0acc8-97e5-48e3-a23a-7f3dc4d3f56b",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "1f1f0403-b589-457d-a575-44f3a8849080",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEA5UTxdej47dgCc4DXyIYAoQCGSYz+MiNYTxeOy5vSds2+KWVQPM9ghgGUA4hilwDxjRaiXkw+dI7vht7AoPjfH3WhqXsJQ8STe9LEzO9/PYD9ZbdCGIfaanjhlpcO4NbBiq1jfrJNHjsaScsPNcmzYWQVeyM2B3Cufp83GisYDll+9ZgkgVdL8prwnfq6vfM6+MW+kNov5QDrQ+FKMA4PPZYKzGdb7arOUpmLKOavf2wYTqcnGMm+p9UAv15C1yxtm93pvI6BWqQCRPp7P+lis8o59a/W5fsHS4s368F6axrMUpCnK3URd3gc5UHv9CUUeSxhRW0kRkORwGtWjeWexQIDAQABAoIBACiqGcm4EK7e6VBjQeKnIeVsmmThRRTPgBJHM2SZtrKru1bMSXb/sTcTgJU/03zFBhLoONRQ4aL61zEswS3L9oc17f6JfBMxAperwow2znKyNj+cSXTgY7UOy7RSBqmKbbmTF1qZdWQvR3JfOctogxB7F/RHQoX/TnPW+YcCrbmdgANHBE920Y3bkzG1jKbqHnI+cuRgj1TLzIM3aex17LqE+DHC/DR3vnHeJZcSDvVigTemWj6iUNIJsja2BRnmhoIQKPrx8Jz451grcnDamBj1d9f2ZyXjX9p3vdjKOE+e+k9cD3MOn6hPjg1rLGa729T6q5XRjTNHbs84yuV3NuECgYEA/pu5234eqj3rHh3HROXS9X9dnOWQdg/xGN8fc+ZP8dfoy21tBOUNAqp7Xov1dsgCFzqUieUPuGP5PagT3nAKMKiNKqySlLH8Np7Mgy6BlQmwEkCH5ZgNfM3nA299mM1pcCfF4umqsCg4wBDkP22zrfgJtLHypTym3/MIZEqZrSsCgYEA5oXCogVEPNLgx3X3PYrOlCJDMf4FG3+KxY246hykXYUALASzNINU91DN2EfaAhxWTVHshBLa+8Yuefbd8/9HlK3ANK/l0ptocwDawExROv+bSFveI8aPgbqcciOkO0E1z24hpzSecyDAXiEoFqv3EeqHQ7vjb/SLNL0voRQ1S88CgYBsDGIfR7JzxLsWmMSL9IxGKrrrbnCT6cgDKg0K/l5G372nNtThEuMmknqwcOzGb7KTcQTAUDkPoz2OcNmduCZa5+ygg4PhHndOJq3brczIFshltoT1ZkWzBR5YUuQWCHYKZpaP6WHKSAdtWr3CPSfXWD+mMy4p+UdIGrcg+Jem6QKBgBWudwPuIuDlpKad/ccYCx37qv5Eug5ADLlP/xhl4T+6hq2dM4243ID2ZKX2/BY+vA9BqVEyxM3xceWexnlwhTcCsJVEBgWtAEHwzqJPi0RVTjGcEmSjBFRbTOOfXo8ELx93aErltBF3/x/bVn3rZq2UtWw1e8rH4V/we05XLDwZAoGAFEhXQJAKyPCPU5Dik4e8Yp/TZ/wy3AZkZuDmojl1obvUxjtoJ2h2C+QU/E8Vx1bCzyMRnHfl6dqITyswaExbKO4/FGV3klKpfzmMOuLDtOgzyx6iKA1G/6uAGCGs3SsHrSUmbxQ64VkeBf56S17vF28TwnbrYHfcpHZwrU1cQHQ=" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICoTCCAYkCBgGQPxj6QjANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAl0ZXN0cmVhbG0wHhcNMjQwNjIyMDgzNjU5WhcNMzQwNjIyMDgzODM5WjAUMRIwEAYDVQQDDAl0ZXN0cmVhbG0wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDlRPF16Pjt2AJzgNfIhgChAIZJjP4yI1hPF47Lm9J2zb4pZVA8z2CGAZQDiGKXAPGNFqJeTD50ju+G3sCg+N8fdaGpewlDxJN70sTM7389gP1lt0IYh9pqeOGWlw7g1sGKrWN+sk0eOxpJyw81ybNhZBV7IzYHcK5+nzcaKxgOWX71mCSBV0vymvCd+rq98zr4xb6Q2i/lAOtD4UowDg89lgrMZ1vtqs5SmYso5q9/bBhOpycYyb6n1QC/XkLXLG2b3em8joFapAJE+ns/6WKzyjn1r9bl+wdLizfrwXprGsxSkKcrdRF3eBzlQe/0JRR5LGFFbSRGQ5HAa1aN5Z7FAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAIHwF760NwUtEPS42Nupt9af/K1BAsIwlvur4la06KlKAmGDpYzvOJEZWIwiiKWuN//MmQoe/vhb6SC1SRf/AtHP5fSmv5hKPbdwdGLi7JvhM/BdhvFUFSwpWgcN7Hu9dPMRDcHauJbgeLPVqErwJbnxjjH8MNC15GLRFM+H5Rs8d+wgNMflbK7K+2mRzmPrVH4gYeGgKisgkLH8JZnwiL1owFt1v3xtGYiPH48WUr0nDpD5px+naXBpYdQl7sxp4bCl8uvTMrfceb2TX1UGf1WP7gOnK83pSw750Qw+Tdx5pgVN28Q72vAGi5naHNwoT18XciTa5UFYH08/145IZg8=" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "17d978e1-a423-4a15-8434-4e7ab563e745",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEApLcgUSo7cE705vUbZnWHMVTlKkArsAYnALC0ZkXP04dWtn2QTayH/J6Ulql30Dp6vVTHEmga9R6bZNB7GCX6wpGG6b4Uq+HiRhZVqk8UyIymlnwe9l0ji/jdm4yYv7Diulh6v5YlQL0p+UmM56bGwgivniXtazxecOPPckOjnEawAdgSGqv+tReU5XYoRQNQzzJBj9coUbwk4fCmEpoWiP19VJU25DxXTneuoeHcIHDcXMybO/kna+l5jlbm8HTKYcPQ/IcD8uj6eo6t0gOYUoiA5qq1AP8x5Qjw9aavirFu0ip0DBu6VrIvj/EPFUelz/2p5B7z3b6Qxpzy7daRcQIDAQABAoIBAB9EqDzgMIJkardBRl9P5kcmH47Cuchjkpnd8ZEMpaQ5J+visDcejn4VOI3VQ+pif5RbeKL04lEv6z3bGdL+urie2aabr97lNYgqiz6WXpKnqKQekd4g1jOnHaJ+sSyKjq/jRgICpbXBcytgnAAJt+dzsKrr9kMKJb92b5X4YyGyN35wiBwCj6ql9Zm08y4U+Wynu9GBM7iOIrqwm1UEMthfWU8udny7mptx5BczQ3k5UvdJLQyx/GASk/MAptfA7bg8t3/ekWa9FFcqEMDLojaikQ6RF/aQkF0wKF2vNSA/t9cthosaVGLrveDbi3EGppOPaLbJZew3PqKtZCRx41UCgYEA17So/8zg0yZDG4IzphcPJjoOJYdcf6ALE2JgIynASk0wNjo3Q2VlolIixUwuvy/tSu+6hQhFNwQEn6brZUE46n/aNBq6fBIeOv4tymsVpaDDkqTgUulSt0FZ/pVdVZ4H4p8Aey/4cOVga4lcce/j5DVouNp7uOI8vi58jxNia9MCgYEAw3wJltm+1J2CWIMp4UlML1KsduBP6mbgTr1J+PfhuQtBpd7NCIVxLCWUHQXKmSdQosKQ0Hf/ZNm/hhocD72Z9sgJwnwlhXGVVAGrMajkTBNuzRrArjGXD0srofwLJoizq3VqLbBku47oGzgfHMDuJUZr8j9nQQpB6cQEWN5XlysCgYA7otgCeNtDpVVyWon7Bm8Ky4wztfvN0SqevlkD/7wJDtQgefHjcTorKXgxggF+nDqHuEWiGApCzpqUpSp5gRHCS3zBYQ5j1QKEntd8GiUO+KZ5eZoHcjiLL8c4yoTWce2OKxWP+VA/rjr9ICnt2jvwUQ/V45nHIM1YazPGvr48PwKBgDFV8KWdtse6KNdl4v/0m8Glv9kQq5qg9CNrKmwnQ1SMPrk6Dc0EwJc/tK3OdF9KyNMK/7ldT5uISQnzNPnUBDOAMNZgtqeDDwjwkuApm9SHYwNoqRBNe65kblKnZbkH7zBqpa16QzIC0xlrhI6hMnk92Kh+z/RePlxdGCvFkZ2ZAoGBAK0VZuQxMtKNYH6zcGrn095eb4NXElJshYepvVprpeSVXlTLWPI1b1pvFW6YJzBP+Jrc2PB+/JskYLTeKfCvK7lLcHCqvvvAu4OECXLsZLoq3tF6bzD1tZuXjyX8bxe16PZCRgrGZZ9u03MAhkWExITDKCR/wt+l1wxUwwxNUd4E" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICoTCCAYkCBgGQPxj7HzANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAl0ZXN0cmVhbG0wHhcNMjQwNjIyMDgzNzAwWhcNMzQwNjIyMDgzODQwWjAUMRIwEAYDVQQDDAl0ZXN0cmVhbG0wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCktyBRKjtwTvTm9RtmdYcxVOUqQCuwBicAsLRmRc/Th1a2fZBNrIf8npSWqXfQOnq9VMcSaBr1Hptk0HsYJfrCkYbpvhSr4eJGFlWqTxTIjKaWfB72XSOL+N2bjJi/sOK6WHq/liVAvSn5SYznpsbCCK+eJe1rPF5w489yQ6OcRrAB2BIaq/61F5TldihFA1DPMkGP1yhRvCTh8KYSmhaI/X1UlTbkPFdOd66h4dwgcNxczJs7+Sdr6XmOVubwdMphw9D8hwPy6Pp6jq3SA5hSiIDmqrUA/zHlCPD1pq+KsW7SKnQMG7pWsi+P8Q8VR6XP/ankHvPdvpDGnPLt1pFxAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAH0p8HFQemR8rzqOj8M3J+I6q6VNBxehIOnFHylXBGJ3oQWdOh5uM/dULkEZSkavSmFn/mAHwWtRpqi9JtqJ2jB8o5pIlIl0AQgl9ecg6P3y8wYvUULB4oOC5XvQAhqd15Pb2BD+gpJi/fCaLTHXGMIxC41P6aRO/qpk2c+TEPcMl6LhSg7r19gAtdqYwb8NrIfb4mEmKRgkLu0Iwhfg5q1gp8yQp8H/EwrF1RU+v/4KVVxw6BmKeS1SuY9HomIOaU5RjFWnSfSIs3+QaCf8KlxvuRIhOiFOau9/g6qvgzhxAugRPVseCxTxxLuDpmpAitARsyxaFXaFXCv4wzsjeeE=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "58f89e57-d45c-4d1f-926e-fed093a1895e",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "aa9af5ed-7b8c-4846-b9d4-4ac748744ea9" ],
        "secret" : [ "VTf562bG5Zb54u4SfBu3NA" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "eea08cd6-e07c-448a-b465-b87f572d9dda",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "745c3cad-7322-44a1-90ef-674ac2871d9c" ],
        "secret" : [ "wMNH__emcuuoUa3ysjNec-ohit7ZZ4ZT3vxjT8AAdDGUbbMWoqnZ0oi2zxjQNJCwVVkxf3zEfCv_gX-sJXDD2w" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "8aaebb7e-e3b0-4f33-b45e-6076d792b113",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a0dc8128-2b00-41d0-b4bf-2f6349ae24b9",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9c64f3ed-5f46-47e1-be28-a8b8c8d6c333",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8c7f19a6-f929-44ca-9d7d-275f25453f1e",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "11d12766-b33a-4422-9de2-ea7e499a05d2",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "838bb5d4-add6-4fa5-9feb-578073a64582",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "480857eb-b1f4-47fc-ad86-a270d75466c1",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f624adda-1041-4384-a73c-41c9d55a070a",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "33cc7dd3-9fe3-4d47-a56e-65ecf586e0f5",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "034bfc6f-3469-4604-be7f-fe4b2e0b33ef",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6f87fcba-368d-4206-992e-7234be073b7b",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a89097e1-8e5d-4603-b5c6-c3e79bcdf8a4",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e20b0b9d-d7d5-4894-8280-e293db2cc8bf",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "5b5221c5-21e0-4831-a3bd-6d2066db0efa",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d4a2b631-afd8-4f70-8432-de35d0f14afa",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8f4ff120-d9bd-429f-a444-c18f5f710d92",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b58e22c2-5bab-48ef-ada4-a69a5456b1ba",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "36a5a869-4093-4e87-a00e-02cf0ffa3350",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cc8012e1-ab04-4432-b526-113ef8ad26da",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0fb47106-0d9a-4eff-a88a-6271fb2adc1b",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "e1474411-05a3-4ed1-b021-5add9e1f0574",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "30c906ff-2f18-49fc-a285-82a8b2695b64",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "21.1.2",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}