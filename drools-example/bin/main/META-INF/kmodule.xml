<?xml version="1.0" encoding="utf-8"?>
<!--
2.2.2.1 Creating and build a Kie Project

a kmodule.xml file defining in a declaratively way the `KieBase`s and `KieSession`s that can be created from it. This can be placed in the resources/META-INF folder of the Maven project while all the other Kie artifacts, such as DRL or Excel files, must be stored in the resources folder or in any other subfolder under it.

In this way the kmodule will contain one single default `KieBase`. All Kie assets stored under the resources folder, or any of its subfolders, will be compiled and added to it. To trigger the building of these artifacts it is enough to create a `KieContainer` for them.

2.2.2.2. The kmodule.xml file

As explained in the former section, the kmodule.xml file is the place where it is possible to declaratively configure the `KieBase`(s) and `KieSession`(s) that can be created from a KIE project.

In particular a `KieBase` is a repository of all the application's knowledge definitions. It will contain rules, processes, functions, and type models. The `KieBase` itself does not contain data; instead, session are created from the `KieBase` into which data can be inserted and from which process instances may be started. Creating the `KieBase` can be heavy, whereas session creation is very light, so it is recommended that `KieBase` be cached where possible to allow for repeated session creation. However end-users usually sholudn't worry about it, because this caching mechanism is already automatically provided by the `KieContainer`.

Conversely the `KieSession` stores and executes on the runtime data. It is created from the `KieBase` or more easily can be created directly from the `KieContainer` if it has been defined in the kmodule.xml file

The kmodule.xml allows to define and configure one or more `KieBase`s and for each `KieBase` all the different `KieSession`s that can be created from it, as showed by the following example:

 -->
<kmodule xmlns:xsi="http://www.w3.org/2001/XMLSchemta-instance" xmlns="http://www.drools.org/xsd/kmodule">
  <!--
      name="The name with which retrieve this KieBase from the KieContainer. This is the only mandatory attribute."
      includes="A comma separated list of other KieBases contained in this kmodule. The artifacts of all these KieBases will be also included in this one."
      packages="By default all the Drools artifacts under the resources folder, at any level, are included into the KieBase. This attribute allows to limit the artifacts that will be compiled in this KieBase to only the ones belonging to the list packages."
      default="Defines if this KieBase is the default one for this module, so it can be created from the KieContainer without passing any name to it. There can be at most one default KieBase in each module."
      equalsBehavior="Defines the behavior of Drools when a new fact is inserted into the Working Memory. With identity it always create a new FactHandle unless the same object isnâ€™t already present in the Working Memory, while with equality only if the newly inserted object is not equal (according to its equal method) to an already existing fact."
      eventProcessingMode="When compiled in cloud mode the KieBase treats events as normal facts, while in stream mode allow temporal reasoning on them."
      declarativeAgenda="Defines if the Declarative Agenda is enabled or not."
  -->
  <kbase name="mykiebase">
    <!--
        Similarly all attributes of the ksession tag (except of course the name) have meaningful default. They are listed and described in the following table:

        name="Unique name of this KieSession. Used to fetch the KieSession from the KieContainer. This is the only mandatory attribute."
        type="A stateful session allows to iteratively work with the Working Memory, while a stateless one is a one-off execution of a Working Memory with a provided data set."
        default="Defines if this KieSession is the default one for this module, so it can be created from the KieContainer without passing any name to it. In each module there can be at most one default KieSession for each type."
        clockType="Defines if events timestamps are determined by the system clock or by a psuedo clock controlled by the application. This clock is specially useful for unit testing temporal rules."
        beliefSystem="Defines the type of belief system used by the KieSession."
    -->
    <ksession name="mykiesession">
      <fileLogger file="mykiesession" threaded="true" interval="0"></fileLogger>
    </ksession>
  </kbase>
</kmodule>
