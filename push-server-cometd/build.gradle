/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'user' at '5/18/18 2:25 PM' with Gradle 3.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java
apply plugin: 'war'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    // jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at implementation time
    implementation 'org.slf4j:slf4j-api:1.7.21'
    implementation 'org.apache.logging.log4j:log4j-api:2.11.0'
    implementation 'org.cometd.java:cometd-java-annotations:3.1.4'
    implementation 'org.cometd.java:cometd-java-server:3.1.4'
    implementation 'org.glassfish.jersey.core:jersey-common:2.27'
    implementation 'org.springframework:spring-web:4.3.2.RELEASE'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testImplementation dependency to testImplementation 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    // testImplementation 'junit:junit:4.12'
}

